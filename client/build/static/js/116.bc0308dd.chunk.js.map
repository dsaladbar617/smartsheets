{"version":3,"file":"static/js/116.bc0308dd.chunk.js","mappings":"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","sources":["routes/sheets/Entry.jsx","_assets/icons/checkmark.svg","routes/sheets/EntryDetails.jsx","_helpers/useScrollHandler.js","routes/sheets/SheetDisplay.jsx","_context/states/useSheetUsers.jsx","_context/UserAccessProvider.jsx","routes/sheets/UserLookup.jsx","routes/sheets/UserDisplay.jsx","routes/sheets/Sheets.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { SheetContext } from '../../_context/SheetProvider';\nimport { GlobalContext } from '../../_context/AppProvider';\n\nconst Entry = (props) => {\n  const { sheet } = useContext(SheetContext);\n  let entry = props.data;\n  const { entryId } = useParams();\n  const navigate = useNavigate();\n\n  const onClickHandler = (e) => {\n    let threshold = 150 // milliseconds\n    let clickDuration = new Date() - sheet.clickTime.current\n\n    if (clickDuration < threshold) {\n      navigate(`/sheet/${sheet.currentSheet.sheet_id}/${entry.entry_id}`)\n    }\n  }\n\n  //TODO: Clean up these onClicks\n  return (\n    <tr className={`entry-row ${entry.entry_id === parseInt(entryId) ? 'entry-highlighted' : ''}`} key={entry.entry_id} id={entry.entry_id}>\n      {sheet.currentSheet.fields.map((field, i) => {\n        let index = entry.values.findIndex(value => value.field_id === field.field_id)\n        if (field.type === 'checkbox') {\n          return index === -1 ? \n            <td key={i} className=\"sheet-display-cell\" onClick={(e) => onClickHandler(e)}>\n              {console.log('no checkbox')}\n              <input type=\"checkbox\" disabled/>\n            </td>\n            :\n            <td key={i} className=\"sheet-display-cell\" onClick={(e) => onClickHandler(e)}>\n              <input type=\"checkbox\" checked={entry.values[index].value === 'true'} disabled/>\n            </td>\n        } else {\n          return index === -1 ? <td key={i} className=\"sheet-display-cell\" \n          onClick={(e) => onClickHandler(e)}></td>\n          :\n          <td key={i} className=\"sheet-display-cell\" \n          onClick={(e) => onClickHandler(e)}>{entry.values[index].value}</td>\n        }\n      })}\n      <td className=\"entry-row-option no-select\" onClick={() => {console.log(entry)}}>⋮</td>\n    </tr>\n  )\n}\n\nexport default Entry;","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCheckmark(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#000000\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 26 26\",\n    width: \"52px\",\n    height: \"52px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 22.566406 4.730469 L 20.773438 3.511719 C 20.277344 3.175781 19.597656 3.304688 19.265625 3.796875 L 10.476563 16.757813 L 6.4375 12.71875 C 6.015625 12.296875 5.328125 12.296875 4.90625 12.71875 L 3.371094 14.253906 C 2.949219 14.675781 2.949219 15.363281 3.371094 15.789063 L 9.582031 22 C 9.929688 22.347656 10.476563 22.613281 10.96875 22.613281 C 11.460938 22.613281 11.957031 22.304688 12.277344 21.839844 L 22.855469 6.234375 C 23.191406 5.742188 23.0625 5.066406 22.566406 4.730469 Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCheckmark);\nexport default __webpack_public_path__ + \"static/media/checkmark.9041d32d9ed1c9fc7b671edb1c4e63ca.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect, useContext, useRef } from 'react';\nimport { SheetContext } from '../../_context/SheetProvider';\nimport edit from '../../_assets/icons/edit-purple.png'\nimport Loader from '../../_components/Loader';\nimport '../../_styles/entry-details.css';\nimport { Div } from '../../_styles/_global'\nimport { ReactComponent as Check } from '../../_assets/icons/checkmark.svg';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport toast from 'react-hot-toast'\n\nconst capitalize = (string) => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nconst EntryDetails = () => {\n  const { sheet } = useContext(SheetContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const entryId = useParams().entryId;\n  const { sheetPageView, setSheetPageView, setSelectedEntry } = sheet;\n\n  const navigate = useNavigate();\n  \n  const submitData = () => {\n    //TODO: Build json to send to server\n    for (let element of document.getElementsByClassName('entry-details-field')) {\n      let fieldData = JSON.parse(element.dataset.field)\n      let inputElement = element.querySelector('input')\n  \n      // console.log(inputElement.value) // newValue\n      // console.log(inputElement.id) // value id\n    }\n  \n    setIsLoading(true);\n  \n    //TODO: Send request to server and set up logic to handle response\n    new Promise(resolve => setTimeout(resolve, 500)).then(() => {\n      sheet.setSelectedEntry({})\n      sheet.setNewEntry(false)\n      setIsLoading(false)\n      navigate(`/sheet/${location.pathname.split('/')[2]}`)\n    })\n  }\n\n  useEffect(() => {\n\n    //TODO: Move some of this to SheetDisplay\n    if (entryId !== undefined) {\n      let index = sheet.currentSheet.entries.findIndex(entry => entry.entry_id === parseInt(entryId))\n\n      if (index !== -1) {\n        \n        sheet.setSelectedEntry(sheet.currentSheet.entries[index])\n\n        var topPos = document.getElementById(entryId).offsetTop\n        var containerHeight = document.getElementsByClassName('sheet-display-body')[0].offsetHeight\n        // console.log(\"Offset Top:\", topPos)\n        if (topPos > containerHeight-200) {\n          document.getElementsByClassName('sheet-display-body')[0].scroll({\n            top: topPos-400,\n            behavior: 'smooth'\n          })\n        } \n      } else {\n        if (sheet.currentSheet.sheet_id !== 0 && sheet.sheetLoading === false) {\n          // setSheetPageView('sheet')\n          setSelectedEntry({})\n          navigate(`/sheet/${location.pathname.split('/')[2]}`)\n        }\n      }\n      // if (sheet.currentSheet.sheet_id === 0 && sheet.sheetLoading === false) {\n      //   // setSheetPageView('sheet')\n      //   setSelectedEntry({})\n      //   navigate(`/`)\n      // }\n    } else {\n      setSelectedEntry({})\n    }\n    if (sheet.currentSheet.sheet_id === 0 && sheet.sheetLoading === false) {\n      // setSheetPageView('sheet')\n      setSelectedEntry({})\n      navigate(`/`)\n    }\n  }, [location, sheet.currentSheet, sheet.sheetLoading])\n\n\n  return (\n    (Object.keys(sheet.selectedEntry).length === 0 && sheet.newEntry === false) ?\n    <div className=\"entry-details-container hidden\"></div>\n    :\n    <>\n      <div className=\"entry-details-container\">\n\n        <div className=\"entry-details-header no-select\">\n          <span>{sheet.newEntry === true ? 'New Entry' : 'Update Entry'}</span>\n          <button className=\"entry-details-cancel cancel-desktop\" onClick={() => {\n            navigate(`/sheet/${location.pathname.split('/')[2]}`)\n            sheet.setSelectedEntry({})\n            sheet.setNewEntry(false)\n          }}>&gt;</button>\n          <button className=\"entry-details-cancel cancel-mobile\" onClick={() => {\n            navigate(`/sheet/${location.pathname.split('/')[2]}`)\n            sheet.setSelectedEntry({})\n            sheet.setNewEntry(false)\n          }}>x</button>\n          {/* <img alt='edit icon'/> */}\n        </div>\n\n        <form className='entry-details-form'>\n          {sheet.currentSheet.fields.map((field, i) => {\n            // map through each field of the sheet and try to get the corresponding value from the selected entry\n            let index;\n            if (sheet.newEntry === false) {\n              index = sheet.selectedEntry.values.findIndex(value => value.field_id === field.field_id)\n            } else {\n              index = -1; // values won't exist for a new entry\n            }\n            return (\n              <div key={i} data-field={JSON.stringify(field)} className='entry-details-field' onClick={(e)=> {\n                  const el = e.currentTarget.getElementsByClassName('entry-details-input')[0];\n                  el.focus()\n                }}\n                onFocus={(e)=>{\n                  for (let element of document.getElementsByClassName('entry-details-field')) {\n                    element.classList.remove('field-selected')\n                  }\n                  e.target.closest('.entry-details-field').classList.add('field-selected');\n                }}>\n                <div>\n                  <span className=\"field-name\">{field.name}</span>\n                  <span className=\"field-type\">{capitalize(field.type)}</span>\n                </div>\n                <hr />\n                {field.type === 'checkbox' ? \n                  <div className='entry-details-checkbox-row'>\n                    <input id={`${field.field_id}_${index === -1 ? 'new' : sheet.selectedEntry.values[index].value_id}`}\n                      key={index === -1 ? 'new' : sheet.selectedEntry.values[index].value_id}\n                      className='entry-details-checkbox'\n                      type=\"checkbox\" defaultChecked={index === -1 ? false : sheet.selectedEntry.values[index].value === 'true'}\n                      onChange={(e) => {\n                        let element = e.target.nextSibling;\n                        element.innerText = element.innerText === 'Yes' ? 'No' : 'Yes';\n                      }}\n                    />\n                    <div className='entry-details-checkbox-text'>\n                      {index === -1 ? 'No' : (sheet.selectedEntry.values[index].value === 'true' ? 'Yes' : 'No')}\n                    </div>\n                  </div>\n                  :\n                  <input id={`${field.field_id}_${index === -1 ? 'new' : sheet.selectedEntry.values[index].value_id}`}\n                    key={index === -1 ? 'new' : sheet.selectedEntry.values[index].value_id}\n                    className='entry-details-input'\n                    defaultValue={index === -1 ? '': sheet.selectedEntry.values[index].value} />\n                }\n                <div className='entry-field-line' />\n              </div>\n              )\n            }\n          )}\n        </form>\n\n        <button className='entry-details-update no-select' onClick={async (e) => {\n          e.preventDefault()\n          submitData();\n          toast.success('Entry Updated')\n        }}>Submit</button>\n\n        {/* Covers the entire component after data is submitted. */}\n        {isLoading === true ? <div className=\"entry-details-loader\">Please Wait...</div> : <></>}\n      </div>\n      <Div className=\"entry-details-underlay\" fills onClick={\n        () => {\n            navigate(`/sheet/${location.pathname.split('/')[2]}`)\n            sheet.setSelectedEntry({})\n            sheet.setNewEntry(false)\n          }}>\n      </Div>\n      <Div className=\"entry-details-underlay-sidebar\" fills onClick={\n        () => {\n            navigate(`/sheet/${location.pathname.split('/')[2]}`)\n            sheet.setSelectedEntry({})\n            sheet.setNewEntry(false)\n          }}>\n      </Div>\n    </>\n  )\n}\n\nexport default EntryDetails;","const useScrollHandler = (elementID) => {\n  const ele = document.getElementById(elementID);\n  let pos = { top: 0, left: 0, x: 0, y: 0 };\n\n  const mouseUpHandler = function (e) {\n    e.preventDefault()\n    document.removeEventListener('mousemove', mouseMoveHandler);\n    document.removeEventListener('mouseup', mouseUpHandler);\n\n    ele.style.cursor = 'grab';\n    ele.style.removeProperty('user-select');\n  };\n\n  const mouseMoveHandler = function (e) {\n    // How far the mouse has been moved\n    const dx = e.clientX - pos.x;\n    const dy = e.clientY - pos.y;\n\n    // Scroll the element\n    ele.scrollTop = pos.top - dy;\n    ele.scrollLeft = pos.left - dx;\n  };\n\n  const mouseDownHandler = function (e) {\n      ele.style.cursor = 'grabbing';\n      ele.style.userSelect = 'none';\n\n      pos = {\n          // The current scroll\n          left: ele.scrollLeft,\n          top: ele.scrollTop,\n          // Get the current mouse position\n          x: e.clientX,\n          y: e.clientY,\n      };\n\n      document.addEventListener('mousemove', mouseMoveHandler);\n      document.addEventListener('mouseup', () => mouseUpHandler(e));\n  };\n\n  return mouseDownHandler;\n}\n\nexport default useScrollHandler;","import React, { useEffect, useContext, useRef } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport { GlobalContext } from '../../_context/AppProvider'\nimport { SheetContext } from '../../_context/SheetProvider';\nimport { Div } from '../../_styles/_global'\nimport Entry from './Entry';\nimport EntryDetails from './EntryDetails';\nimport logo from '../../_assets/img/logo-dark.png';\nimport dummyData from '../../_dummy/sheet.json';\nimport dummyData2 from '../../_dummy/sheet2.json'\nimport edit from '../../_assets/icons/edit-purple.png'\nimport useScrollHandler from '../../_helpers/useScrollHandler';\nimport smartApi from '../../_helpers/smartApi';\n\nconst SheetDisplay = () => {\n  const navigate = useNavigate();\n  const entryId = useParams.entryId;\n  const location = useLocation();\n  const mouseDownHandler = useScrollHandler('scroll-container');\n\n  const { store } = useContext(GlobalContext)\n  const { theme, isAuth, setIsAuth } = store\n\n  const { sheet } = useContext(SheetContext);\n\n  const { sheetId } = useParams();\n\n  const { sheetPageView, setSheetPageView, setSelectedEntry, selectedEntry, newEntry, setCurrentSheet } = sheet;\n\n  const { user, setSheetAccess, refresh } = store;\n\n  useEffect(() => {\n    if (selectedEntry.entry_id > 0) {\n      setSheetPageView('edit-entry');\n    } else if (newEntry === true) {\n      setSheetPageView('new-entry');\n    } else if (selectedEntry.entry_id === undefined) {\n      setSheetPageView('sheet');\n    }\n  }, [selectedEntry, newEntry])\n\n  useEffect(() => {\n    // get user's sheets here\n    sheet.setSheetLoading(true)\n\n    if (sheetId === '1001') {\n      sheet.setCurrentSheet(dummyData)\n    } else if (sheetId === '1002') {\n      sheet.setCurrentSheet(dummyData2)\n    } else {\n\n      if (isNaN(sheetId)) {\n        navigate('/')\n      } else {\n\n        smartApi(['GET', `get_sheet/${sheetId}`], user.token)\n          .then(result => {\n            if (result.name === undefined) {\n              // fix for sheet name location\n              result.name = result.sheet.name;\n            }\n            // console.log(result.name)\n            sheet.setCurrentSheet(result);\n            sheet.setSheetLoading(false);\n          })\n          .catch(error => {\n            sheet.setSheetLoading(false);\n            console.log('error', error)});\n      }\n\n\n    }\n  }, [sheetId])\n\n  // useEffect(() => {\n  //   sheet.setSheetLoading(false);\n  // }, [sheet.currentSheet])\n\n  return (\n    <>\n      <div className={`sheet-display-container ${(sheetPageView === 'edit-entry' || sheetPageView === 'new-entry') ? 'shrink' : ''}`}>\n        {/* <SheetHeader> */}\n        <div className='sheet-display-header'>\n          <div className=\"sheet-header-meta\">\n            <img className=\"sheet-header-icon no-select\" src={logo} />\n            <span className=\"nowrap\">{sheet.currentSheet.name}</span>\n          </div>\n          <div className=\"sheet-search no-select\">\n            <input placeholder='Search'/>\n            <button>Filter</button>\n          </div>\n        </div>\n        <div id='scroll-container' className='sheet-display-body' onMouseDown={(e) => {\n          sheet.clickTime.current = new Date();\n          mouseDownHandler(e);\n          }}>\n          <table className='sheet-display-table'>\n            {/* <SheetFields> */}\n            <thead className='no-select'>\n              <tr>\n                {sheet.currentSheet.fields.map((field, i) =>\n                  <td className=\"sheet-display-cell\" key={i}>{field.name}</td>\n                )}\n                <td className=\"sheet-display-cell\" key='option'></td>\n              </tr>\n            </thead>\n            {/* <SheetEntries> */}\n            <tbody>\n              {sheet.currentSheet.entries.map((entry, i) => {\n                return <Entry data={entry} key={i}/>\n              })}\n            </tbody>\n          </table>\n        </div>\n        <button className=\"dummy-users-button\" onClick={\n          () => navigate(`/sheet/${sheet.currentSheet.sheet_id}/users`)}><img alt='edit-icon'/></button>\n        <button className=\"new-entry no-select\" onClick={() => sheet.setNewEntry(true)}><img alt='edit-icon'/></button>\n      </div>\n      <EntryDetails entryId={entryId}/>\n    </>\n  );\n}\n\nexport default SheetDisplay;\n//sidebar\n\n//header\n//fields\n//entries\n\n//detailed\n\n{/* <tr key={entry.id} onClick={() => {console.log('test')}}>\n{sheet.currentSheet.fields.map(field => {\n  let index = entry.values.findIndex(value => value.field_id === field.field_id)\n  return index === -1 ? <td></td>:<td>{entry.values[index].value}</td>\n})}\n</tr> */}\n{/* <div className=\"sheet-display-container\">\n  <div className=\"sheet-display\">\n    <div className=\"sheet-header\">{sheet.currentSheet.name}</div>\n    {sheet.currentSheet.fields.map(field => {\n      let count = 0;\n      return (<div className=\"sheet-column\" key={field.field_id}>\n        <div className='field'>{field.name}</div>\n        {sheet.currentSheet.entries.map(entry => {\n          let index = entry.values.findIndex(value => value.field_id === field.field_id)\n          let item = entry.values[index];\n          count += 1;\n          return <div className={`value ${count % 2 === 0 ? 'even':'odd'}`} key={item.value_id}>{item.value}</div>\n        })}\n      </div>\n      )\n    }\n    )}\n  </div>\n</div>  */}\n\n{/* <>\n<Div flex column className=\"sheet-display-container\">\n  <Div flex row className=\"sheet-header\">{sheet.currentSheet.name}</Div>\n  <Div flex row className=\"sheet-fields\">\n    {sheet.currentSheet.fields.map(field =>\n      <span className=\"field\" key={field.id}>{field.name}</span>\n    )}\n  </Div>\n  <Div flex column className=\"sheet-entries\" >\n    {sheet.currentSheet.entries.map(entry =>\n      <Div flex row className=\"entry\" key={entry.id}>\n        {entry.values.map(value =>\n          <span className=\"value\" key={value.id}>{value.value}</span>\n        )}\n      </Div>\n    )}\n  </Div>\n</Div>\n</> */}","import { useState } from 'react';\n\nconst useSheetUsers = () => {\n\n  const [ sheetUsers, setSheetUsersArray ] = useState([]);\n\n  const setSheetUsers = (newState) => {\n    setSheetUsersArray(newState);\n  }\n\n  return { sheetUsers, setSheetUsers };\n}\n\nexport default useSheetUsers;","import React, { useRef, createContext } from 'react'\nimport useSheetUsers from './states/useSheetUsers'\n\nconst UserAccessContext = createContext()\n\nconst UserAccessProvider = ({ children }) => {\n  const { sheetUsers, setSheetUsers } = useSheetUsers();\n\n  const userAccess = {\n\n    /* STATES */\n    sheetUsers,\n\n    /* SETTERS */\n    setSheetUsers,\n\n    /* EFFECTS */\n\n\n    /* REFS */\n\n  }\n\n  return (\n    <UserAccessContext.Provider value={{ userAccess }}>\n      { children }\n    </UserAccessContext.Provider>\n  )\n}\n\nexport { UserAccessContext, UserAccessProvider };","import React, { useState, useEffect, useContext, useRef } from 'react';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport edit from '../../_assets/icons/edit-purple.png'\nimport Loader from '../../_components/Loader';\nimport { Div } from '../../_styles/_global'\nimport { ReactComponent as Check } from '../../_assets/icons/checkmark.svg';\nimport toast from 'react-hot-toast'\nimport dummyData from '../../_dummy/users.json';\nimport '../../_styles/user-lookup.css';\nimport defaultProfileImage from '../../_assets/img/default-profile-img.png';\nimport useScrollHandler from '../../_helpers/useScrollHandler';\nimport { SheetContext } from '../../_context/SheetProvider';\nimport { GlobalContext } from '../../_context/AppProvider'\nimport smartApi from '../../_helpers/smartApi';\nimport { UserAccessContext } from '../../_context/UserAccessProvider';\n\nconst UserLookup = () => {\n  const [ userResults, setUserResults ] = useState([])\n  const [ lookupVisible, setLookupVisible ] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [ search, setSearch ] = useState('');\n  let mouseDownHandler = useScrollHandler('user-scroll-container');\n\n  const { store } = useContext(GlobalContext)\n  const { sheet } = useContext(SheetContext);\n  const { userAccess } = useContext(UserAccessContext);\n\n  const { user, setSheetAccess, refresh } = store;\n\n  useEffect(() => {\n    if (location.pathname.split('/').length >= 5 && location.pathname.split('/')[4] === 'lookup') {\n      setLookupVisible(true);\n      console.log(location.pathname.split('/')[2])\n      if (location.pathname.split('/')[2] === '1001' || location.pathname.split('/')[2] === \"1002\") {\n        setUserResults(dummyData.users)\n        mouseDownHandler = useScrollHandler('user-scroll-container');\n      } else {\n\n        smartApi(['GET', 'get_all_users/'], user.token)\n          .then(result => {\n            // console.log(result);\n            //fix user id\n            result.map(user => user.user_id = user.id)\n            setUserResults(result);\n            setLookupVisible(true);\n          })\n          .catch(error => console.log('error', error));\n\n      }\n    } else {\n      setLookupVisible(false);\n    }\n  }, [location.pathname])\n\n  useEffect(() => {\n    mouseDownHandler = useScrollHandler('user-scroll-container');\n  }, [lookupVisible])\n\n  const addUser = (userId, userName) => {\n    let threshold = 150 // milliseconds\n    let clickDuration = new Date() - sheet.clickTime.current\n\n    if (clickDuration < threshold) {\n      console.log(`Attempting to add User ID: ${userId}, Name: ${userName}`)\n\n      let index = userAccess.sheetUsers.findIndex(user => user.user_id === parseInt(userId))\n\n      if (index === -1) {\n        var myHeaders = new Headers();\n        myHeaders.append(\"Authorization\", `Bearer ${user.token}`);\n        myHeaders.append('Content-Type', 'application/json')\n  \n        var requestOptions = {\n          method: 'POST',\n          headers: myHeaders,\n          redirect: 'follow',\n          body: JSON.stringify({users: [{user_id: userId, role_name: 'Viewer'}]})\n        };\n      \n        let sheetId = location.pathname.split('/')[2];\n  \n        let payload = {users: [{user_id: userId, role_name: 'Viewer'}]}\n        smartApi(['POST', `add_user_roles/${sheetId}`, payload], user.token)\n          .then(result => {\n            toast.success('User Added')\n\n            smartApi(['GET', `get_sheet_users/${sheetId}`], user.token)\n            .then(result => {\n              userAccess.setSheetUsers(result);\n              if (result.length === 0) {\n                console.log(result);\n                navigate('/')\n              }\n            })\n            .catch(error => console.log('error', error));\n          })\n          .catch(error => console.log('error', error));\n        // fetch(`http://localhost:8080/api/add_user_roles/${sheetId}`, requestOptions)\n        //   .then(response => response.json())\n        //   .then(result => {\n        //     toast.success('User Added')\n        //     console.log(result); // user role has been added\n        //   })\n        //   .catch(error => console.log('error', error));\n      } else {\n        toast.error('User Already a Member')\n      }\n\n    }\n  }\n\n\n  return (\n    <>\n      {lookupVisible === false ? \n      <div className=\"user-lookup-container hidden\"><div id='user-scroll-container' className='user-lookup-body'></div></div> \n      : \n      <div className=\"user-lookup-container\">\n        <div className='user-lookup-header no-select'>\n          <span>User Lookup</span>\n          <button className=\"user-lookup-cancel cancel-desktop\" onClick={() => {\n              navigate(`/sheet/${location.pathname.split('/')[2]}/users`)\n              setUserResults([])\n            }}>&gt;</button>\n            <button className=\"user-lookup-cancel cancel-mobile\" onClick={() => {\n              navigate(`/sheet/${location.pathname.split('/')[2]}/users`)\n              setUserResults([])\n            }}>x</button>\n\n        </div>\n        <div className='user-lookup-search'>\n          <div className='user-lookup-input'>\n            <input placeholder='Search' onChange={(e) => setSearch(e.target.value)}></input>\n            {/* <img /> */}\n          </div>\n          <div className='user-search-line'/>\n        </div>\n        <div id='user-scroll-container' className='user-lookup-body' onMouseDown={(e) => {\n          sheet.clickTime.current = new Date();\n          mouseDownHandler(e);\n          }}>\n          {userResults.filter(user => //change one of these to email once we have that data\n            (user.name.match(new RegExp(search,'i','g')) || user.name.match(new RegExp(search,'i','g')))\n            ).map(user => {\n            let userId = user.user_id;\n            let userName = user.name;\n            if (user.email === undefined || user.email === null) {\n              user.email = `${user.name.split(' ')[0]}.${user.name.split(' ')[1]}@gmail.com`\n            }\n            if (user.role === undefined) {\n              user.role = user.role_name //fix \n            }\n\n            return (\n              <div key={userId} className='user-lookup-result'>\n                <img src={defaultProfileImage} className='user-lookup-image no-select' alt=\"profile-image\"/>\n                <div className='user-lookup-data'>\n                  <span className='data-name'>{user.name}</span>\n                  <span className='data-email'>{user.email}</span>\n                </div>\n                <button onClick={() => addUser(userId, userName)} className='user-search-add no-select'>+</button>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      }\n    </>\n  )\n}\n\nexport default UserLookup;","import React, { useState, useEffect, useContext, useRef } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { SheetContext } from '../../_context/SheetProvider';\nimport { Div } from '../../_styles/_global'\nimport logo from '../../_assets/img/logo-dark.png';\nimport dummyData from '../../_dummy/users.json';\nimport edit from '../../_assets/icons/edit-purple.png'\nimport useScrollHandler from '../../_helpers/useScrollHandler';\nimport '../../_styles/userdisplay.css';\nimport defaultProfileImage from '../../_assets/img/default-profile-img.png';\nimport plus from '../../_assets/icons/plus.png';\nimport dummySheetAccessData from '../../_dummy/sheet-access.json';\nimport UserLookup from './UserLookup';\nimport { GlobalContext } from '../../_context/AppProvider'\nimport smartApi from '../../_helpers/smartApi';\nimport toast from 'react-hot-toast'\nimport { UserAccessContext } from '../../_context/UserAccessProvider';\n\nconst UserDisplay = () => {\n  const { store } = useContext(GlobalContext)\n  const { sheet } = useContext(SheetContext);\n  const { userAccess } = useContext(UserAccessContext);\n\n  const [ usersChanged, setUsersChanged] = useState(0);\n  const [ userDisplayView, setUserDisplayView ] = useState('simple');\n  const mouseDownHandler = useScrollHandler('scroll-container');\n  const location = useLocation();\n  const navigate = useNavigate();\n  let usersToUpdate = useRef([]);\n  let sheetId;\n  const [ sheetName, setSheetName ] = useState('');\n\n  const { user, setSheetAccess, refresh } = store;\n\n  useEffect(()=> {\n    // console.log('Use Effect Triggered')\n  }, [userAccess.sheetUsers])\n\n  useEffect(() => {\n    // get sheetId\n    sheetId = parseInt(location.pathname.split('/')[2]);\n\n    // load user data here\n    if (sheetId === 1001 || sheetId === 1002) {\n      let index = dummySheetAccessData.sheets.findIndex(sheet => sheet.sheet_id === sheetId)\n      setSheetName(dummySheetAccessData.sheets[index].name);\n      userAccess.setSheetUsers(dummyData.users);\n    } else {\n\n    \n      smartApi(['GET', `get_sheet_users/${sheetId}`], user.token)\n        .then(result => {\n          userAccess.setSheetUsers(result);\n          if (result.length === 0) {\n            console.log(result);\n            navigate('/')\n          }\n        })\n        .catch(error => console.log('error', error));\n\n      // navigate('/')\n    }\n  },[])\n\n  const getSheetUsers = () => {\n    sheetId = parseInt(location.pathname.split('/')[2]);\n    smartApi(['GET', `get_sheet_users/${sheetId}`], user.token)\n      .then(result => {\n        userAccess.setSheetUsers(result);\n        if (result.length === 0) {\n          console.log(result);\n          navigate('/')\n        } else {\n          navigate(location.pathname);\n        }\n      })\n      .catch(error => console.log('error', error));\n  }\n\n  const updateUsers = () => {\n    let payload = {users: []}\n    for (let element of document.getElementsByClassName('role-changed')) {\n      console.log(`Set User ID: ${element.closest('tr').id} to ${element.value}`)\n      // let payload = {users: [{user_id: userId, role_name: 'Viewer'}]}\n      payload.users.push({user_id: element.closest('tr').id, \"role_name\": element.value})\n    }\n    setUsersChanged(0)\n    let sheetId = location.pathname.split('/')[2];\n\n    var myHeaders = new Headers();\n    myHeaders.append(\"Authorization\", `Bearer ${user.token}`);\n    myHeaders.append('Content-Type', 'application/json')\n\n    var requestOptions = {\n      method: 'PATCH',\n      headers: myHeaders,\n      redirect: 'follow',\n      body: JSON.stringify(payload)\n    };\n  \n    fetch(`http://localhost:8080/api/edit_user_roles/${sheetId}`, requestOptions)\n      .then(response => response.json())\n      .then(result => {\n        toast.success('Users Roles Updated!')\n        console.log(result); // user role has been added\n        getSheetUsers();\n        // window.location.reload();\n      })\n      .catch(error => console.log('error', error));\n\n    // smartApi(['PATCH', `edit_user_roles/${sheetId}`, payload], user.token)\n    //   .then(result => {\n    //     // toast.success('Users Roles Updated!')\n    //     console.log(result); \n    //   })\n    //   .catch(error => console.log('error', error));\n\n    console.log(payload)\n  }\n\n\n\n  const deleteUser = (target) => {\n    let payload = {users: [target]}\n\n    let sheetId = location.pathname.split('/')[2];\n\n    smartApi(['DELETE', `remove_roles/${sheetId}`, payload], user.token)\n      .then(result => {\n        toast.success('User Removed')\n        console.log(result); \n      })\n      .catch(error => console.log('error', error));\n  }\n\n  return (\n    <>\n      <div className={`users-display-container ${location.pathname.split('/').length >= 5 && location.pathname.split('/')[4] === 'lookup' ? 'shrink' : ''}`}>\n        <div className='users-display-header'>\n          <div className=\"users-header-meta\">\n            <div className=\"users-header-icon\">\n              <img />\n            </div>\n            <div className='users-header-title'>\n              <span className=\"page-name nowrap\">User Access</span>\n              <span className={`sheet-name ${sheetName === '' ? 'filler':''} nowrap`}>{sheetName === '' ? 'Loading...': sheetName}</span>\n            </div>\n          </div>\n          <div className=\"users-search\">\n            {/* <input placeholder='Search'/> */}\n            {usersChanged <= 0 ? \n              <button className='update-disabled' disabled>Update</button> \n              : \n              <button className='update-enabled' onClick={updateUsers}>Update</button>}\n          </div>\n        </div>\n        <div id='scroll-container' className='users-display-body' onMouseDown={(e) => {\n          sheet.clickTime.current = new Date();\n          mouseDownHandler(e);\n          }}>\n          {userDisplayView === 'smart' ? \n            // smart view here\n            <div>\n              Wow!\n            </div>\n            :\n            // simple view here\n            <table className='users-display-table'>\n              <thead>\n                <tr>\n                  <td className='users-display-cell'></td>\n                  <td className='users-display-cell'>Name</td>\n                  <td className='users-display-cell'>Role</td>\n                  <td className='users-display-cell'>E-Mail</td>\n                  <td className='users-display-cell'></td>\n                </tr>\n              </thead>\n              <tbody>\n                {userAccess.sheetUsers.map((user,i) => {\n                  let roles = ['Owner', 'Editor', 'Viewer', 'Daniel']\n\n                  if (user.email === undefined || user.email === null) {\n                    user.email = `${user.name.split(' ')[0]}.${user.name.split(' ')[1]}@gmail.com`\n                  }\n                  if (user.role === undefined) {\n                    user.role = user.role_name //fix \n                  }\n                  return (\n                    <tr id={user.user_id} key={i} className='user-row'>\n                      <td className='user-row-picture'><img className='user-profile-picture' src={user.picture !== undefined ? user.picture : defaultProfileImage} /></td>\n                      <td className='users-display-cell'>{user.name}</td>\n                      <td className='users-display-cell'>\n                        <select defaultValue={user.role} className='users-display-role-select' onChange={(e) => {\n                          if (e.target.value !== user.role) {\n                            if (!e.target.classList.contains('role-changed')) {\n                              e.target.classList.add('role-changed')\n                              setUsersChanged(usersChanged + 1)\n                              usersToUpdate.current.push({user_id: user.user_id, role_name: e.target.value})\n                            }\n                          } else {\n                            if (e.target.classList.contains('role-changed')) {\n                              e.target.classList.remove('role-changed')\n                              setUsersChanged(usersChanged - 1)\n                              let index = usersToUpdate.current.findIndex(user => user.user_id === user.id)\n                              usersToUpdate.current.splice(index, 1);\n                            }\n                          }\n                        }}>\n                          {roles.map(role => \n                            <option key={`option-${role}`} className={`${role === user.role ? 'previous-value' : 'other-value'}`}value={role}>{role}</option>)}\n                        </select>\n                      </td>\n                      <td className='users-display-cell'>\n                        {user.email}\n                      </td>\n                      <td className='user-row-option'>\n                        <img alt='delete-icon' onClick={() => {deleteUser(user)}}/>\n                      </td>\n                    </tr>\n                  )}\n                )}\n              </tbody>\n            </table>\n          }\n        </div>\n      </div>\n      <UserLookup/>\n      <button className='add-user' onClick={() => navigate('lookup')}><img className='primary-image'/><img className='secondary-image'/></button>\n      <button className='users-display-exit' onClick={\n          () => navigate(-1)\n        }>&lt;</button>\n      {/* <button className='toggle-view' onClick={() => \n      userDisplayView === 'smart' ? setUserDisplayView('simple') : setUserDisplayView('smart')}><img /></button> */}\n    </>\n  );\n}\n\nexport default UserDisplay;\n//sidebar\n\n//header\n//fields\n//entries\n\n//detailed\n","import React, { useState, useEffect, useContext, lazy, Suspense } from 'react';\nimport { Route, Routes, useParams, Navigate } from 'react-router-dom';\nimport { SheetProvider } from '../../_context/SheetProvider'\nimport { GlobalContext } from '../../_context/AppProvider'\nimport { SheetContext } from '../../_context/SheetProvider';\nimport { Div } from '../../_styles/_global'\nimport Loader from '../../_components/Loader'\nimport dummyData from '../../_dummy/sheet.json';\nimport dummyData2 from '../../_dummy/sheet2.json';\nimport SheetDisplay from  './SheetDisplay';\nimport UserDisplay from './UserDisplay';\nimport Sidebar from '../../_components/Sidebar';\nimport \"../../_styles/sheets.css\";\nimport { UserAccessProvider } from '../../_context/UserAccessProvider';\n\nconst Sheets = () => {\n\n  const NotFound = lazy(() => import('../NotFound'));\n\n  return (\n    <div className='sheet-page'>\n      <UserAccessProvider>\n        <Routes>\n          <Route path='/' element={ <SheetDisplay/> } />\n            <Route path='/users/*' element={ <Suspense fallback={<Loader/>}><UserDisplay/></Suspense> } />\n            <Route path='/edit/*' element={ <Suspense fallback={<Loader/>}><NotFound/></Suspense> } />\n            <Route path='/:entryId' element={ <Suspense fallback={<Loader/>}><SheetDisplay/></Suspense> } />\n            <Route path='/:entryId/*' element={ <Suspense fallback={<Loader/>}><Loader/><Navigate to={`/sheet/${location.pathname.split('/')[2]}`} /></Suspense> } />\n          <Route path=\"/*\" element={ <NotFound /> } />\n        </Routes>\n      </UserAccessProvider>\n    </div>\n  );\n}\n\nconst Page = () => {\n  // const { store } = useContext(GlobalContext)\n  // const { theme, isAuth, setIsAuth } = store\n\n  // const { sheet } = useContext(SheetContext);\n\n  // const { sheetId } = useParams();\n\n  // useEffect(() => {\n  //   // get user's sheets here\n  //   if (sheetId === '1') {\n  //     sheet.setCurrentSheet(dummyData);\n  //   }\n  //   if (sheetId === '100') {\n  //     sheet.setCurrentSheet(dummyData2);\n  //   }\n  // }, [sheetId])\n\n  // useEffect(() => {\n  //   api(['get', 'sheet/${sheetId}'], noCallback) // Usage: api([method, path, payload], callback)\n  //     .then(res => setCurrentSheet(res))\n  //     .catch(err => console.log(err))\n  // }, [])\n  \n  return (\n    <>\n        <SheetDisplay/>\n        {/* {sheet.sheetPageView === 'sheet' ? <SheetDisplay/> : <></>}\n        {sheet.sheetPageView === 'users' ? <UserDisplay/> : <></>} */}\n    </>\n  )\n}\n\n{/* <button name=\"get\" onClick={() => setIsAuth(!isAuth)}>{ isAuth ? <>Authenticated ✅</> : <>Not Authenticated ❌</> }</button> */}\n\n    // <Div id='page' className={theme} flex column fills center centertext>\n    //   <Div flex column centerchildren centertext>\n    //     <h1>sheets</h1>\n    //     <SheetDisplay />\n    //   </Div>\n    // </Div>\n\nexport default Sheets;"],"names":["props","sheet","useContext","SheetContext","entry","data","entryId","useParams","navigate","useNavigate","onClickHandler","e","Date","clickTime","current","currentSheet","sheet_id","entry_id","className","parseInt","id","fields","map","field","i","index","values","findIndex","value","field_id","type","onClick","console","log","disabled","checked","useState","isLoading","setIsLoading","location","useLocation","setSelectedEntry","sheetPageView","setSheetPageView","submitData","document","getElementsByClassName","element","JSON","parse","dataset","querySelector","Promise","resolve","setTimeout","then","setNewEntry","pathname","split","useEffect","undefined","entries","topPos","getElementById","offsetTop","offsetHeight","scroll","top","behavior","sheetLoading","Object","keys","selectedEntry","length","newEntry","string","stringify","currentTarget","focus","onFocus","classList","remove","target","closest","add","name","charAt","toUpperCase","slice","value_id","defaultChecked","onChange","nextSibling","innerText","defaultValue","preventDefault","toast","fills","elementID","ele","pos","left","x","y","mouseUpHandler","removeEventListener","mouseMoveHandler","style","cursor","removeProperty","dx","clientX","dy","clientY","scrollTop","scrollLeft","userSelect","addEventListener","mouseDownHandler","useScrollHandler","store","GlobalContext","theme","isAuth","setIsAuth","sheetId","user","setCurrentSheet","setSheetAccess","refresh","setSheetLoading","dummyData","dummyData2","isNaN","smartApi","token","result","catch","error","src","logo","placeholder","onMouseDown","alt","sheetUsers","setSheetUsersArray","setSheetUsers","newState","UserAccessContext","createContext","UserAccessProvider","children","useSheetUsers","userAccess","Provider","userResults","setUserResults","lookupVisible","setLookupVisible","search","setSearch","user_id","addUser","userId","userName","myHeaders","Headers","append","users","role_name","payload","filter","match","RegExp","email","role","defaultProfileImage","usersChanged","setUsersChanged","userDisplayView","usersToUpdate","useRef","sheetName","setSheetName","dummySheetAccessData","getSheetUsers","deleteUser","push","requestOptions","method","headers","redirect","body","fetch","response","json","picture","contains","splice","NotFound","lazy","path","Suspense","fallback","Loader","to"],"sourceRoot":""}